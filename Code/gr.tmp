class Graphic_row(Data_row):
       """
       Post a row with a title and a graphic...
       and something to let us deal with it ("Change" button?)
       """
       def __init__(self, parent, text, member, graphic_path):
               Data_row.__init__(self, parent, text, member)
 
               self.graphic_path = graphic_path
               
               self.handler = self.button_handler              #  ?????  probably not any more...
               
               #self.parent.row += 1           # this one takes up 2 rows, one more than most
               
       def post(self):
               """
               put the text and graphic on the screen...
               
               also post the "button")
               """
               
               print "Graphic post"
               if self.label is None:
               # write the base label...
                       self.frame = self.parent.edit_frame
                       self.label = tk.Label(self.frame, text=self.text+":", justify=tk.RIGHT)
                       self.label.grid(row=self.row,column=self.column, sticky=tk.E)

                       self.gOpt = tk.StringVar()
                       
                       #self.changeButton = ttk.Button(self.parent.edit_frame, text="Change " + self.text, command=self.button_handler).grid(column=self.column + 2, row=self.row + 1, sticky=tk.
                       
                       self.statusVar = tk.StringVar()
                       self.status = tk.Label(self.parent.edit_frame, textvariable=self.statusVar)
                       self.status.grid(row=self.row, column=self.column + 1)
                       
        
               else:
                       try:
                               self.graph_el.graphic.destroy()
                       except:
                               print "Graphic_el.graphic.destroy failed."
                               pass
               
               self.graph_el = cltkutils.graphic_element(self.frame)
               self.graph_el.filepath = self.graphic_path
               self.graph_el.row = self.row
               self.graph_el.column = self.column + 2
               self.graph_el.columnspan = 3
               self.graph_el.sticky = tk.W
               self.graph_el.post()    
               
               if self.new:
                       self.set_status(None)
                       self.new = False
               else:
                       self.set_status(True)
       
       def set(self, value):
               self.value = value
               self.new = False
               self.set_status(ok=True)
               self.post()
       

                               
       def button_handler(self):
               print "this is the button handler"
                       
       def return_value(self):
               return("SomeScreenSht"), self.ok
       

